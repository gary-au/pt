\name{compareRDU}
\alias{compareRDU}
\alias{compareRDU,Choices-method}
\title{compareRDU}
\arguments{
  \item{object}{Choices, an instance of a Choices class.}

  \item{probability_weighting_specification}{Probability_Weighting,
  an instance of a Probability_Weighting class.}

  \item{utility}{Utility, an instance of a Utility class.}

  \item{digits}{numeric, the number of digits to display in
  the output.}
}
\description{
  Compare choice gambles under Quiggin's (1993)
  Rank-dependent utility (RDU).
}
\examples{
# This example creates the two Allais common consequence paradox choices,
# and computes the RDU for each gamble in the choices.

choice_id_vector <- c(1, 1, 1, 1, 2, 2, 2, 2)

gamble_id_vector <- c(1, 1, 1, 2, 1, 1, 2, 2)

outcome_id_vector <- c(1, 2, 3, 1, 1, 2, 1, 2)

objective_consequence_vector <- c(2500, 2400, 0, 2400,
	2500, 0, 2400, 0)

probability_string_vector <- c("0.33", "0.66", "0.01", "1.0",
	"0.33", "0.67", "0.34", "0.66")

my_choices <- create_choices(choice_id_vector=choice_id_vector,
	gamble_id_vector=gamble_id_vector,
	outcome_id_vector=outcome_id_vector,
	objective_consequence_vector=objective_consequence_vector,
	probability_string_vector=probability_string_vector)

my_choices

tk_1992_utility <- create_utility(utility_function="power",
	parameters=c(alpha=0.88, beta=0.88, lambda=2.25))

tk_1992_positive_probability_weighting <-
	create_probability_weighting(probability_function=
	"Tversky_Kahneman_1992",
	parameters=c(alpha=0.61))

compareRDU(my_choices,
	probability_weighting_specification=
	tk_1992_positive_probability_weighting,
	utility=tk_1992_utility,
	digits=4)
}
\references{
  Quiggin, J. (1982). A theory of anticipated utility.
  Journal of Economic Behavior & Organization, 3(4),
  323-343.

  Quiggin, J. (1985). Subjective utility, anticipated
  utility, and the Allais paradox. Organizational Behavior
  and Human Decision Processes, 35(1), 94-101.

  Quiggin, J. (1993). Generalized expected utility theory:
  The rank-dependent model. Boston, MA: Kluwer Academic
  Publishers.
}

